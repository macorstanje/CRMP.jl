var documenterSearchIndex = {"docs":
[{"location":"reaction_times/#Conditional-process","page":"Reaction times","title":"Conditional process","text":"","category":"section"},{"location":"reaction_times/","page":"Reaction times","title":"Reaction times","text":"Function used in the simulation of guided processes","category":"page"},{"location":"reaction_times/","page":"Reaction times","title":"Reaction times","text":"CurrentModule = CRMP","category":"page"},{"location":"reaction_times/","page":"Reaction times","title":"Reaction times","text":"method\nconstant_rate\ndecreasing_rate\nincreasing_rate\ngettime","category":"page"},{"location":"reaction_times/#CRMP.method","page":"Reaction times","title":"CRMP.method","text":"method\n\nsupertype for simulation methods, might find another name for it later\n\n\n\n\n\n","category":"type"},{"location":"reaction_times/#CRMP.constant_rate","page":"Reaction times","title":"CRMP.constant_rate","text":"constant_rate <: method\n\nused when the rates of the reactions in the network are constant in time\n\n\n\n\n\n","category":"type"},{"location":"reaction_times/#CRMP.decreasing_rate","page":"Reaction times","title":"CRMP.decreasing_rate","text":"decreasing_rate <: method\n\nused when the rates of the reactions in the network are decreasing in time\n\n\n\n\n\n","category":"type"},{"location":"reaction_times/#CRMP.increasing_rate","page":"Reaction times","title":"CRMP.increasing_rate","text":"increasing_rate <: method\n\nused when the rates of the reactions in the network are increasing in time\n\n\n\n\n\n","category":"type"},{"location":"reaction_times/#CRMP.gettime","page":"Reaction times","title":"CRMP.gettime","text":"gettime(::constant_rate, ℓ::reaction{T}, t::Real, x::Union{T, Array{T,1}}) where {T<:Real}\n\nReturns an Exp(ℓ.λ(t,x))-random variable, provided ℓ.λ(t,x)>0. Else returns 1e10\n\n\n\n\n\ngettime(::decreasing_rate, ℓ::reaction, t, x::Union{T, Array{T,1}}) where {T<:Real}\n\nReturns the reaction time of reaction ℓ if ℓ.λ is decreasing in time. Uses a thinning algorithm with upper bound ℓ.λ(t,x)\n\n\n\n\n\ngettime(::increasing_rate, ℓ::reaction{T}, t, x::Union{T, Array{T,1}}, setδ::Function) where {T<:Real}\n\nReturns the reaction time of reaction ℓ if ℓ.λ is increasing in time. Uses a thinning algorithm on compact intervals [t, t+δ] where δ is obtained from setδ and time by δ is moved if the reaction time is not below δ.\n\n\n\n\n\n","category":"function"},{"location":"conditional_process/#Conditional-process","page":"Conditional process","title":"Conditional process","text":"","category":"section"},{"location":"conditional_process/","page":"Conditional process","title":"Conditional process","text":"Function used in the simulation of guided processes","category":"page"},{"location":"conditional_process/","page":"Conditional process","title":"Conditional process","text":"CurrentModule = CRMP","category":"page"},{"location":"conditional_process/","page":"Conditional process","title":"Conditional process","text":"dist²\nC\ncondition_reaction\ncondition_process\nsetδ","category":"page"},{"location":"conditional_process/#CRMP.dist²","page":"Conditional process","title":"CRMP.dist²","text":"dist²(ϕ)\n\nGiven a latent variable ϕ (possible matrix-valued), returns a quadratic distance function on 𝕊. For now, we keep it as dist²(ϕ)(xy)=y-x^2ϕ.\n\n\n\n\n\n","category":"function"},{"location":"conditional_process/#CRMP.C","page":"Conditional process","title":"CRMP.C","text":"C(ℓ::reaction{T}, x::Union{T, Array{T,1}}, xT::Union{T, Array{T,1}}, d²::Function) where {T<:Real}\n\nReturns the sign of reaction ℓ at x given a squared distance function d² and a desired endpoint xT. Returns d²(xT x+ℓξ) - d²(xTx)\n\n\n\n\n\n","category":"function"},{"location":"conditional_process/#CRMP.condition_reaction","page":"Conditional process","title":"CRMP.condition_reaction","text":"condition_reaction(ℓ::reaction{S}, xT::Union{S, Array{S,1}}, T::Real, d²::Function) where {S<:Real}\n\nGiven a reaction ℓ, a desired endpoint xT, end time T and squared distance function d², returns a reaction with the same difference vector ξ, but with the conditioned rate specified in the paper.\n\n\n\n\n\n","category":"function"},{"location":"conditional_process/#CRMP.condition_process","page":"Conditional process","title":"CRMP.condition_process","text":"condition_process(P::ChemicalReactionProcess{S}, xT::Union{S, Array{S,1}}, T::Real, d²::Function) where {S<:Real}\n\nReturns a new ChemicalReactionProcess{S} where all reaction in the network are conditioned using condition_reaction.\n\n\n\n\n\n","category":"function"},{"location":"conditional_process/#CRMP.setδ","page":"Conditional process","title":"CRMP.setδ","text":" setδ(η::Real, T::Real ,xT::Union{S, AbstractArray{S,1}}, d²::Function) where {S<:Real}\n\nreturns the function (ℓ t x)  T-t- 1( 2*log(η)C(ℓ x xT d²) + 1(T-t) ) for the thinning algorithm.\n\n\n\n\n\n","category":"function"},{"location":"forward_simulation/#Forward-simulation","page":"Forward simulation","title":"Forward simulation","text":"","category":"section"},{"location":"forward_simulation/","page":"Forward simulation","title":"Forward simulation","text":"Forward simulation of chemical reaction processes in various settings","category":"page"},{"location":"forward_simulation/","page":"Forward simulation","title":"Forward simulation","text":"CurrentModule = CRMP","category":"page"},{"location":"forward_simulation/","page":"Forward simulation","title":"Forward simulation","text":"next_jump\nsimulate_forward\nconditional","category":"page"},{"location":"forward_simulation/#CRMP.next_jump","page":"Forward simulation","title":"CRMP.next_jump","text":"next_jump(::constant_rate, t::Real, x::Union{T, Array{T,1}}, P::ChemicalReactionProcess{T}) where {T<:Real}\n\nIf the process is of constant (in time) rate, simulates exponential jump times for all reactions and returns the reaction with the shortest jump time along with the respective time.\n\n\n\n\n\n","category":"function"},{"location":"forward_simulation/#CRMP.simulate_forward","page":"Forward simulation","title":"CRMP.simulate_forward","text":"simulate_forward(::constant_rate, x₀::Union{T1, Array{T1,1}}, T::T2, P::ChemicalReactionProcess{T1}) where {T1<:Real, T2<:Real}\n\nForward simulation starting from x₀, untime time T of the process specified in P when jump rates are constant (in time).\n\n\n\n\n\nsimulate_forward(::conditional, x₀::Union{T1, Array{T1,1}}, xT, T::T2, P::ChemicalReactionProcess{T1}, d²::Function, η) where {T1<:Real, T2<:Real}\n\nForward simulation of the guided process specified in P, starting from x₀ and with desired end state (T, xT).\n\n\n\n\n\n","category":"function"},{"location":"forward_simulation/#CRMP.conditional","page":"Forward simulation","title":"CRMP.conditional","text":"conditional <: method\n\nFor specifying that we want to simulate from the guided process\n\n\n\n\n\n","category":"type"},{"location":"networks/#networks","page":"Networks","title":"Networks","text":"","category":"section"},{"location":"networks/","page":"Networks","title":"Networks","text":"Various function for setting up chemical reaction networks and several well-known networks","category":"page"},{"location":"networks/","page":"Networks","title":"Networks","text":"CurrentModule = CRMP","category":"page"},{"location":"networks/","page":"Networks","title":"Networks","text":"reaction\nChemicalReactionNetwork\nChemicalReactionProcess\nnr_species\nnr_reactions\nPoissonProcess_constantrate\nBirthDeathProcess\nGTT\nviral_infection\nenzyme_kinetics","category":"page"},{"location":"networks/#CRMP.reaction","page":"Networks","title":"CRMP.reaction","text":"reaction{T<:Real}\n\nA reaction, specified through a rate function λ of time and space and a difference vector ξ. For example, a unit rate poisson has one reaction, specified as\n\njulia> plus1 = reaction((t,x) -> x, 1)\n\n\n\n\n\n","category":"type"},{"location":"networks/#CRMP.ChemicalReactionNetwork","page":"Networks","title":"CRMP.ChemicalReactionNetwork","text":"ChemicalReactionNetwork{T<:Real}\n\nA chemical reaction network is set-up as a tuple of a vector of species 𝒮 with Strings as input and a vector of reaction{T}s. I still need some way to distinct between process and network\n\n\n\n\n\n","category":"type"},{"location":"networks/#CRMP.ChemicalReactionProcess","page":"Networks","title":"CRMP.ChemicalReactionProcess","text":"ChemicalReactionProcess{T<:Real}\n\nA chemical reaction process is set-up as a tuple of a vector of species 𝒮 with Strings as input and a vector of reaction{T}s. I still need some way to distinct between process and network For example, a poisson process is set-up as follows\n\njulia> plus1 = reaction((t,x) -> x, 1)\njulia> PoissonProcecss = ChemicalReactionProcess([\"Counts\"], [plus1])\n\nAlternatively, if there is just one reaction, or species, one could omit the Array.\n\n\n\n\n\n","category":"type"},{"location":"networks/#CRMP.nr_species","page":"Networks","title":"CRMP.nr_species","text":"nr_species(P::ChemicalReactionProcess)\n\nReturns how much species a ChemicalReactionProcess contains\n\n\n\n\n\n","category":"function"},{"location":"networks/#CRMP.nr_reactions","page":"Networks","title":"CRMP.nr_reactions","text":"nr_reactions(P::ChemicalReactionProcess)\n\nReturns how much reactions a ChemicalReactionProcess contains\n\n\n\n\n\n","category":"function"},{"location":"networks/#CRMP.PoissonProcess_constantrate","page":"Networks","title":"CRMP.PoissonProcess_constantrate","text":"PoissonProcess_constantrate(rate::Real)\n\nReturns a ChemicalReactionProcess for the Poisson process with constant rate rate.\n\n\n\n\n\n","category":"function"},{"location":"networks/#CRMP.BirthDeathProcess","page":"Networks","title":"CRMP.BirthDeathProcess","text":"BirthDeathProcess(birth_rate::Real , death_rate::Real)\n\nReturns a ChemicalReactionProcess for the birth-death process with parameters birth_rate and death_rate\n\n\n\n\n\n","category":"function"},{"location":"networks/#CRMP.GTT","page":"Networks","title":"CRMP.GTT","text":"GTT(κ₁::T ,κ₂::T, dₘ::T, dₚ::T) where {T<:Real}\n\nReturns a ChemicalReactionProcess for Gene transcriptiona and translation as described in section 2.1.something of Anderson & Kurtz with\n\ntranscription rate κ₁\ntranslation rate κ₂\ndegradation rate of mRNA dₘ\ndegradation rate of protein dₚ\n\n\n\n\n\nGTT(κ₁::T ,κ₂::T, κ₃::T, dₘ::T, dₚ::T, dD::T) where {T<:Real}\n\nSimilar to GTT but with the inclusion of dimerization with dimerization rate κ₃ and degradation rate of dimer dD\n\n\n\n\n\n","category":"function"},{"location":"networks/#CRMP.viral_infection","page":"Networks","title":"CRMP.viral_infection","text":"viral_infection(κ₁::T, κ₂::T, κ₃::T, κ₄::T, κ₅::T, κ₆::T) where {T<:Real}\n\nChemicalReactionProcess for viral infection, See e.g. section 2.1.2 of Anderson & Kurtz\n\n\n\n\n\n","category":"function"},{"location":"networks/#CRMP.enzyme_kinetics","page":"Networks","title":"CRMP.enzyme_kinetics","text":"enzyme_kinetics(κ₁::T, κ₂::T, κ₃::T) where {T<:Real}\n\nSee e.g. section 2.1.3 of Anderson & Kurtz\n\n\n\n\n\n","category":"function"},{"location":"#Documentation-for-CRMP.jl","page":"Home","title":"Documentation for CRMP.jl","text":"","category":"section"},{"location":"#Summary","page":"Home","title":"Summary","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Library with functions for forward simulation of continuous-time chemical reaction process and performing statistical inference on such process. Manual to be added later.","category":"page"},{"location":"#Walkthrough-for-Birth-death-process","page":"Home","title":"Walkthrough for Birth-death process","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The birth death-process consists of the simple species set 𝒮 = {\"Individuals\"} and the reactions birth and death with rates birth_rate and death_rate, respectively.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using CRMP\njulia> birth = reaction( (t,x) -> x + 1 , birth_rate*x)\njulia> death = reaction( (t,x) -> x - 1 , death_rate*x)\njulia> P = ChemicalReactionProcess([\"Individuals\"], [birth, death])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Acces the set of species or the set of reactions through P.𝒮 and P.ℛ respectively. The birth-death process is also a buit-in function of this library accessed through","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> P = BirthDeathProcess(birth_rate, death_rate)","category":"page"},{"location":"","page":"Home","title":"Home","text":"For other built-in reaction process, see networks.","category":"page"},{"location":"#Forward-simulation","page":"Home","title":"Forward simulation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The rate functions are constant in time and thus we simulate forward given x₀ and some final time T using","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> tt, xx = simulate_forward(constant_rate(), x₀, T, P)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can plot the components using (dedicated plot function will be added to the library later)","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Plots\njulia> plot(tt, map(x -> x[1], xx), label = P.𝒮[1], xlabel = \"t\", ylabel = \"counts\")\njulia> plot(tt, map(x -> x[2], xx), label = P.𝒮[2], xlabel = \"t\", ylabel = \"counts\")","category":"page"},{"location":"#Conditioned-process","page":"Home","title":"Conditioned process","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If we have a desired end-state (T,xT) and latent variable ϕ, in the guided proposal framework often the diffusivity of the auxiliary process, we simulate a guided process via","category":"page"},{"location":"","page":"Home","title":"Home","text":"CP = condition_process(P, xT, T, dist²(ϕ))\ntto, xxo = simulate_forward(conditional(), x₀, xT, T, CP, dist²(ϕ), 0.5)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here, dist²(ϕ) is a distance measure on the chemical reaction networks, currently set as dist²(ϕ)(x,y) = |y-x|²/ϕ. The 0.5 can be adjusted, this is the minimal desired acceptance rate of the thinning process when sampling reaction times.","category":"page"},{"location":"#Likelihood-computation","page":"Home","title":"Likelihood computation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is currently still implemented locally, will follow soon ...","category":"page"}]
}
